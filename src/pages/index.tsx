import FriendsActivity from "../components/FriendsActivity";
import NewReleases from "../components/NewReleases";
import RecentlyPlayed from "../components/RecentlyPlayed";
import MusicList from "../components/MusicList";
import Head from "next/head";
import getNewSongs from "../utils/getNewSongs";
import getAudioUrl from "../utils/getAudioUrl";
import songListFilter from "../utils/songListFilter";

type HomeProps = {
  newSongsList: MusicList;
};

export default function Home({ newSongsList }: HomeProps) {
  return (
    <>
      <Head>
        <title>Taotify</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className=" mt-[100px] ml-[200px]">
        <RecentlyPlayed />
        <FriendsActivity />
        <NewReleases />
        {/* only for music list demo*/}
        <MusicList musicList={newSongsList} />
      </main>
    </>
  );
}

export /* istanbul ignore next */ async function getStaticProps() {
  const response = await getNewSongs();
  if (!response.status) return { props: { newSongs: [] }, revalidate: 600 };
  const { newSongs } = response;
  const urls = await Promise.all(
    newSongs.map(async (item: Music) => getAudioUrl(item.id, "standard"))
  );
  const newSongsWithUrls = songListFilter(urls, newSongs);
  const newSongsList = { id: 0, type: "newSongs", tracks: newSongsWithUrls };
  return { props: { newSongsList }, revalidate: 600 };
}
